/*
 *     class ClassName 
 *     {     
 *         ---------------------------
 *         변수 : 클래스 전체에 사용
 *               다른 클래스에서 사용이 가능
 *               => 클래스 멤버변수
 *         ---------------------------
 *         생성자 : 클래스명과 동일
 *                변수의 초기화
 *         ---------------------------
 *         메소드 : 기능처리
 *         ----
 *         ---------------------------       
 *     }
 *     
 *     => 프로그램
 *     
 *        1. 변수
 *        2. 변수처리 방법 => 메소드
 *        
 *     => 1. 변수 설정 : 멤버변수 / 지역변수 / 매개변수
 *                                      ------ 사용자 요청을 받는 경우
 *                                          ex) 로그인
 *                                              - ID, PWD
 *                                              아이디 찾기 
 *                                              - ID
 *                                              검색
 *                                              - 검색어
 *                                              상세보기
 *                                              - 고유번호  
 *                                              
 *         2. 메소드 
 *         
 *            1. 반복제거
 *            2. 구조적인 프로그램
 *               단락 나눠서 처리
 *            3. 관련된 명령문을 모아서 처리     
 *            4. 재사용
 *            5. 다른 클래스와 통신
 *               ------------- Scanner, System.print...
 *              =>  메소드 장점 : 수정 / 추가
 *            6. 메소드는 다음에 사용 할 수 있다
 *                      한가지 기능 수행
 *              => 라이브러리
 *           ------------------------------------------
 *           메소드 
 *           
 *            1. 형식
 *            
 *                [접근지정어]
 *                 public / private / protected / default
 *                                                -------
 *                                                
 *                [제어어] 
 *                 default / static / abstract / final
 *                                               ----- 종단 : 수정불가
 *                                    -------- 추상메소드:선언만
 *                          ------- 컴파일시 자동 저장
 *                 => static - 공통
 *                 => static이 없는 경우는 객체
 *                 
 *                 [접근지정어] [제어어] static 리턴형 메소드명(매개변수)
 *                 {
 *                     return 결과값
 *                 }
 *                 
 *                 리턴형  : 사용자가 요청한 내용을 처리 후 결과값 출력
 *                         ex) 
 *                             사용자 정수 2개 => +한 값 요청
 *                               => 2개 정수 +한 값 전송
 *                          ==> 리턴은 반드시 한개만 전송이 가능  
 *                          ==> 여러개 결과값이 나올때는 : 배열 / 클래스
 *                          ==> 일반 데이터형 (참조형 : String, 배열)   
 *                 메소드명 : 소문자 시작 기본
 *                          변수 => 식별자 동일
 *                 매개변수 : 사용자가 요청한 값
 *                 ----------------------
 *                 *** 결과값이 없는 경우 : 오라클에 저장해 달라
 *                                     오라클에서 삭제해달라
 *                                     오라클에서 수정해달라
 *                                     => void
 *                                   
 *            2. 한가지 기능이 어디까지 인지
 *            
 *            3. 사용자로부터 받는 값 : 매개변수(메소드 인자)
 *                                 여러개 사용이 가능
 *                                 ------------- 3개 이상 : 배열 / 클래스
 *            4. 처리 결과 : 리턴형
 *               -------------- 결과값이 없는 경우 => void
 *               
 *            ------------------------------------
 *                    리턴형            매개변수   
 *            ------------------------------------ 
 *                      o               o
 *               String replace (char c1, cahr c2)
 *                => String이 가지고 있는 메소드       
 *            ------------------------------------
 *                      o               x
 *               double random()
 *                => Math : 수학과 관련       
 *            ------------------------------------
 *                      x               o     
 *               void main(String[] arg)
 *                => Database : DML
 *                               - INSERT / UPDATE / DELETE
 *                => void print(String s) / printf / println               
 *            ------------------------------------
 *                      x               x        => 사용 빈도가 없다
 *                => 출력만 요구
 *                ex) *을 100개 출력해라
 *                System.out.println() -> 다음줄로 내려라       
 *            ------------------------------------    
 *            
 *            메소드 : 변수 + 연산자 + 제어문
 *            
 *            기본  - 입력 기능|
 *                 - 처리 기능|=> 세분화 (재사용)
 *                 - 출력 기능|
 *            -------------------------------
 *            ex) 자판기
 *                 | 동전 넣기 - 입력
 *                 | 해당 음료 선택 - 처리
 *                 | 음료, 잔돈 - 출력
 *            -------------------------------      
 *            5. 동작 순서
 *               => 메소드 호출전까지 수행
 *               => 메소드 이동 => 메소드 종료시까지 수행
 *               => 호출한 위치로 이동
 *               => 밑에있는 문장 수행
 *               
 *            6. 호출 방법
 *               1) 같은 클래스 안에서 호출
 *                  class A
 *                  {
 *                      void display()
 *                      {
 *                      }
 *                      public static void main(String[] arg)
 *                      {
 *                          display()
 *                          
 *                          A a=new A();
 *                          a.display()
 *                      }
 *                  }
 *                  
 *               2) 다른 클래스에서 호출
 *                   class A
 *                   {
 *                       C.display() => Math.random()
 *                                      -------------->static(공통)
 *                                      
 *                       String s=" Hello";      |
 *                       s.trim();               | -> 인스턴스 (따로)
 *                       String ss="Hello Java"; |              
 *                   }
 *                   class B
 *                   {
 *                       static void display()
 *                       {
 *                       }
 *                   }
 *               
 *               3) 인스턴스 메소드 호출
 *            7. 메소드 변수 선언 : 메소드가 종료되면 메모리에서 사라진다
 *               ------------
 *                | 지역변수 / 매개변수
 *                 --------------- 메소드 안에서만 사용하는 변수
 *               ** main에서는 소스 코딩이 없이 시작점으로만 사용한다  
 *                                                                                     
 *     
 */
public class 클래스의구성요소 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
